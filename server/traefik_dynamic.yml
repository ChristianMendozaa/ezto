http:  
  services:
    config-server:
      loadBalancer:
        servers:
          - url: "http://config-server:${CONFIG_SERVER_PORT}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    auth-service:
      loadBalancer:
        servers:
          - url: "http://auth-service:${CONFIG_SERVER_PORT}""
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    inventory-service:
      loadBalancer:
        servers:
          - url: "http://inventory-service:${PORT_INVENTORY}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    purchase-service:
      loadBalancer:
        servers:
          - url: "http://purchase-service:${PORT_PURCHASE}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    shop-service:
      loadBalancer:
        servers:
          - url: "http://shop-service:${PORT_SHOP}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    supplier-service:
      loadBalancer:
        servers:
          - url: "http://supplier-service:${PORT_SUPPLIER}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    promotions-service:
      loadBalancer:
        servers:
          - url: "http://promotions-service:${PORT_PROMOTIONS}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    usermemberships-service:
      loadBalancer:
        servers:
          - url: "http://usermembership-service:${PORT_USERMEMBERSHIP}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"
    
    class-service:
      loadBalancer:
        servers:
          - url: "http://class-service:${PORT_CLASSES}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"
    
    reservations-service:
      loadBalancer:
        servers:
          - url: "http://reservations-service:${PORT_RESERVATIONS}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"
    
    memberships-service:
      loadBalancer:
        servers:
          - url: "http://memberships-service:${PORT_MEMBERSHIPS}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
            expression: "NetworkErrorRatio() > 0.5"

    event-service:
      loadBalancer:
        servers:
          - url: "http://event-service:${PORT_EVENTS}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"
    
    personal-service:
      loadBalancer:
        servers:
          - url: "http://event-service:${PORT_PERSONAL}"
        healthCheck:
          path: "/health"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    keycloak:
      loadBalancer:
        servers:
          - url: "http://keycloak:8080"
        healthCheck:
          path: "/"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

    consul:
      loadBalancer:
        servers:
          - url: "http://consul:8500"
        healthCheck:
          path: "/v1/status/leader"
          interval: "5s"
          timeout: "3s"
        passHostHeader: true
        circuitBreaker:
          expression: "NetworkErrorRatio() > 0.5"

  routers:
    config-api:
      rule: "PathPrefix(`/config`)"
      service: config-server
      entryPoints:
        - web
      middlewares:
        - config-strip

    auth:
      rule: "PathPrefix(`/auth`)"
      service: auth-service
      entryPoints:
        - web
      middlewares:
        - strip-auth
        - retry-auth

    inventory:
      rule: "PathPrefix(`/inventory`)"
      service: inventory-service
      entryPoints:
        - web
      middlewares:
        - inventory-strip
        - retry-auth

    purchase:
      rule: "PathPrefix(`/purchase`)"
      service: purchase-service
      entryPoints:
        - web
      middlewares:
        - purchase-strip
        - retry-auth

    shop:
      rule: "PathPrefix(`/shop`)"
      service: shop-service
      entryPoints:
        - web
      middlewares:
        - shop-strip
        - retry-auth

    supplier:
      rule: "PathPrefix(`/supplier`)"
      service: supplier-service
      entryPoints:
        - web
      middlewares:
        - supplier-strip
        - retry-auth

    promotions:
      rule: "PathPrefix(`/promotions`)"
      service: promotions-service
      entryPoints:
        - web
      middlewares:
        - promotions-strip
        - retry-promotions

    usermemberships:
      rule: "PathPrefix(`/usermemberships`)"
      service: usermemberships-service
      entryPoints:
        - web
      middlewares:
        - usermemberships-strip
        - retry-usermembership

    reservations:
      rule: "PathPrefix(`/reservations`)"
      service: reservations-service
      entryPoints:
        - web
      middlewares:
        - reservations-strip
        - retry-reservations

    classes:
      rule: "PathPrefix(`/classes`)"
      service: class-service
      entryPoints:
        - web
      middlewares:
        - classes-strip
        - retry-class

    classes:
      rule: "PathPrefix(`/memberships`)"
      service: memberships-service
      entryPoints:
        - web
      middlewares:
        - retry-memberships

    events:
      rule: "PathPrefix(`/events`)"
      service: event-service
      entryPoints:
        - web
      middlewares:
        - retry-event
    
    personal:
      rule: "PathPrefix(`/personal`)"
      service: personal-service
      entryPoints:
        - web
      middlewares:
        - retry-event

    keycloak:
      rule: "PathPrefix(`/keycloak`)"
      service: keycloak
      entryPoints:
        - web
      middlewares:
        - retry-auth

    consul:
      rule: "PathPrefix(`/consul`)"
      service: consul
      entryPoints:
        - web
      middlewares:
        - retry-auth

  services:
    # Se definen en base a etiquetas de los contenedores (no es necesario repetirlos aqu√≠)

  middlewares:
    retry-auth:
      retry:
        attempts: 3
        initialInterval: 500ms

    retry-promotions:
      retry:
        attempts: 3
        initialInterval: 500ms

    retry-usermembership:
      retry:
        attempts: 3
        initialInterval: 500ms

    retry-supplier:
      retry:
        attempts: 3
        initialInterval: 500ms

    retry-class:
      retry:
        attempts: 3
        initialInterval: 500ms

    retry-reservations:
      retry:
        attempts: 3
        initialInterval: 500ms

    config-strip:
      stripPrefix:
        prefixes:
          - /config

    strip-auth:
      stripPrefix:
        prefixes:
          - /auth

    shop-strip:
      stripPrefix:
        prefixes:
          - /shop
    inventory-strip:
      stripPrefix:
        prefixes:
          - /inventory
    purchase-strip: 
      stripPrefix:
        prefixes:
          - /purchase
    supplier-strip:
      stripPrefix:
        prefixes:
          - /supplier

    promotions-strip:
      stripPrefix:
        prefixes:
          - /promotions

    usermemberships-strip:
      stripPrefix:
        prefixes:
          - /usermemberships

    reservations-strip:
      stripPrefix:
        prefixes:
          - /reservations

    classes-strip:
      stripPrefix:
        prefixes:
          - /classes
