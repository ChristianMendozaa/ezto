version: "3.9"

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
      - "--tracing=true"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling"
      - "--tracing.jaeger.localAgentHostPort=jaeger:6831"
      - "--tracing.jaeger.samplingType=const"
      - "--tracing.jaeger.samplingParam=1.0"
    ports:
      - "80:80"       # HTTP entrypoint
      - "8082:8080"   # Dashboard UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik_dynamic.yml:/etc/traefik/dynamic/traefik_dynamic.yml
    networks:
      - ezto

  jaeger:
    image: jaegertracing/all-in-one:1.51
    ports:
      - "16686:16686"   # Jaeger UI
      - "6831:6831/udp" # Tracing
    networks:
      - ezto

  postgres:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ezto

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    command: start-dev
    ports:
      - "8080:8080"
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      - postgres
    networks:
      - ezto
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=PathPrefix(`/keycloak`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

  consul:
    image: hashicorp/consul:latest
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
    networks:
      - ezto
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.consul.rule=PathPrefix(`/consul`)"
      - "traefik.http.routers.consul.entrypoints=web"
      - "traefik.http.services.consul.loadbalancer.server.port=8500"

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - consul
      - keycloak
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.services.auth.loadbalancer.server.port=8000"
    networks:
      - ezto

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port ${PORT_INVENTORY}
    depends_on:
      - consul
      - keycloak
    volumes:
      - ./inventory-service:/app
      - ./firebase_credentials.json:/app/firebase_credentials.json:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory.rule=PathPrefix(`/inventory`)"
      - "traefik.http.routers.inventory.entrypoints=web"
      - "traefik.http.services.inventory.loadbalancer.server.port=${PORT_INVENTORY}"
    networks:
      - ezto

  purchase-service:
    build:
      context: ./purchase-service
      dockerfile: Dockerfile
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port ${PORT_PURCHASE}
    depends_on:
      - consul
      - keycloak
    volumes:
      - ./purchase-service:/app
      - ./firebase_credentials.json:/app/firebase_credentials.json:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.purchase.rule=PathPrefix(`/purchase`)"
      - "traefik.http.routers.purchase.entrypoints=web"
      - "traefik.http.services.purchase.loadbalancer.server.port=${PORT_PURCHASE}"
    networks:
      - ezto

  shop-service:
    build:
      context: ./shop-service
      dockerfile: Dockerfile
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port ${PORT_SHOP}
    depends_on:
      - consul
      - keycloak
    volumes:
      - ./shop-service:/app
      - ./firebase_credentials.json:/app/firebase_credentials.json:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shop.rule=PathPrefix(`/shop`)"
      - "traefik.http.routers.shop.entrypoints=web"
      - "traefik.http.services.shop.loadbalancer.server.port=${PORT_SHOP}"
    networks:
      - ezto

  supplier-service:
    build:
      context: ./supplier-service
      dockerfile: Dockerfile
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port ${PORT_SUPPLIER}
    depends_on:
      - consul
      - keycloak
    volumes:
      - ./supplier-service:/app
      - ./firebase_credentials.json:/app/firebase_credentials.json:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.supplier.rule=PathPrefix(`/supplier`)"
      - "traefik.http.routers.supplier.entrypoints=web"
      - "traefik.http.services.supplier.loadbalancer.server.port=${PORT_SUPPLIER}"
    networks:
      - ezto

  promotions-service:
    build:
      context: ./promotions-service
      dockerfile: Dockerfile
    volumes:
      - ./promotions-service:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    environment:
      - ENV=development
    depends_on:
      - consul
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.promotions.rule=PathPrefix(`/promotions`)"
      - "traefik.http.routers.promotions.entrypoints=web"
      - "traefik.http.routers.promotions.middlewares=promotions-headers"
      - "traefik.http.middlewares.promotions-headers.headers.customrequestheaders.X-From-Traefik=EzTo"
      - "traefik.http.services.promotions.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.promotions.loadbalancer.healthcheck.interval=5s"
      - "traefik.http.services.promotions.loadbalancer.healthcheck.timeout=3s"
      - "traefik.http.services.promotions.loadbalancer.server.port=8001"
    networks:
      - ezto

  usermembership-service:
    build:
      context: ./usermembership-service
      dockerfile: Dockerfile
    volumes:
      - ./usermembership-service:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload
    environment:
      - ENV=development
    depends_on:
      - consul
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.membership.rule=PathPrefix(`/usermemberships`)"
      - "traefik.http.routers.membership.entrypoints=web"
      - "traefik.http.routers.membership.middlewares=membership-headers"
      - "traefik.http.middlewares.membership-headers.headers.customrequestheaders.X-From-Traefik=EzTo"
      - "traefik.http.services.membership.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.membership.loadbalancer.healthcheck.interval=5s"
      - "traefik.http.services.membership.loadbalancer.healthcheck.timeout=3s"
      - "traefik.http.services.membership.loadbalancer.server.port=8002"
    networks:
      - ezto

volumes:
  pgdata:

networks:
  ezto:
    driver: bridge
