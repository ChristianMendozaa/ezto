version: "3.9"

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
      - "--tracing=true"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling"
      - "--tracing.jaeger.localAgentHostPort=jaeger:6831"
      - "--tracing.jaeger.samplingType=const"
      - "--tracing.jaeger.samplingParam=1.0"
    ports:
      - "8000:80"
      - "8082:8080"  # Dashboard UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik_dynamic.yml:/etc/traefik/dynamic/traefik_dynamic.yml
    networks:
      - ezto

  jaeger:
    image: jaegertracing/all-in-one:1.51
    ports:
      - "16686:16686"      # UI de Jaeger
      - "6831:6831/udp"    # Tracing
    networks:
      - ezto

  classes-service:
    build:
      context: ./classes-service
      dockerfile: Dockerfile
    volumes:
      - ./classes-service:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - ENV=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.classes.rule=PathPrefix(`/classes`)"
      - "traefik.http.routers.classes.entrypoints=web"
      - "traefik.http.routers.classes.middlewares=classes-headers"
      - "traefik.http.middlewares.classes-headers.headers.customrequestheaders.X-From-Traefik=EzTo"
      - "traefik.http.services.classes.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.classes.loadbalancer.healthcheck.interval=5s"
      - "traefik.http.services.classes.loadbalancer.healthcheck.timeout=3s"
    networks:
      - ezto
    depends_on:
      - keycloak
      - consul

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    command: start-dev
    ports:
      - "8080:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    depends_on:
      - postgres
    networks:
      - ezto

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ezto

  consul:
    image: consul:1.15
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -dev -client=0.0.0.0
    networks:
      - ezto

volumes:
  pgdata:

networks:
  ezto:
    driver: bridge
